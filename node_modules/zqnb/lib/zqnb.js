
/**
 * @file        Customer extend & package
 * @module      zqnb
 * @author      zhangcd@zqnb.com.cn
 * @copyright   Copyright ZQNB. All rights reserved.
 * @license    
 */

// Load required modules org
var http    	= require("http");              	// http server core module
var https 		= require("https");
var express 	= require("express");           	// web framework external module
var io      		= require("socket.io");         	// web socket external module
var easyrtc 	= require("easyrtc");           	// EasyRTC external module
var fs			= require("fs");


// Setup and configure Express http server. Expect a subfolder called "static" to be the web root.
var httpApp = express();

var options = {
		  key: fs.readFileSync('key.pem'),
		  cert: fs.readFileSync('cert.pem')
		};

var log4js = require("./zqnb_log4js");
var event = require("./zqnb_event");
var util =  require("./zqnb_util");

var pub		= require('./zqnb_public');


exports.startServer= function(httpPort,httpsPort,dir){
	
	/**
	 * Server startup
	 */
	event.addListener("started", function(info) {
		logger.info("*******************************************************");
		logger.info("Now date: "+util.dateToString(new Date()));
		logger.info("Http Server Startup ! at port : "+httpPort);
		logger.info("Https Server Startup ! at port : "+httpsPort);
		logger.info("*******************************************************");
	});
	/**
	 * System exception catch
	 */
	process.on("uncaughtException", function (err) {
		logger.fatal(err);
	});
	
	httpApp.use(express.static(dir));

//	var webServer = http.createServer(httpApp).listen(httpPort);
	var webServer = https.createServer(options, httpApp).listen(httpsPort);
	var logger = log4js.getLogger();
	logger.setLevel('debug');
	
	
	// Start Socket.io so it attaches itself to Express server
	//'log level' : 0,   // 0 - error, 1 - warn, 2 - info, 3 - debug
	//'destroy buffer size': Infinity, 	 B
	var socketServer = io.listen(webServer, {'destroy buffer size': Infinity});
	// Start EasyRTC server
	easyrtc.listen(httpApp, socketServer, {logLevel:"info", logDateEnable:true});
	
};

exports.startService = function(){
	if(httpApp)
	{
		httpApp.get("/zqnb",function(req, res, next){
			console.log("zqnb request: "+req.param('name'));
			res.send("message");
		});
	}
};

/**
 * reference event
 */
exports.event = event;
/**
 * reference util
 */
exports.util = util;
/**
 * reference log4js
 */
exports.log4js = log4js;


/**
 * connect to DB and get Data!
 */
/*
var mysql = require('mysql');
var conn = mysql.createConnection({
    host: 'localhost',
    user: 'root',
    password: 'zqnb1234',
    database:'zqnb',
    port: 3306
});
conn.connect();
*/

/**
 * visit data
 */
/*
var sqls = {
	    'insertSQL': 'insert into user(id,name,password) values(1,"zzzzz","22222"),(2,"zzzzz1","22222"),(3,"zzzzz2","22222")',
	    'selectSQL': 'select * from user limit 10',
	    'deleteSQL': 'delete from user',
	    'updateSQL': 'update user set name="zzzzz update"  where name="zzzzz"'
	};

	var tasks = ['deleteSQL', 'insertSQL', 'selectSQL', 'updateSQL', 'selectSQL'];

var async = require('async');
async.eachSeries(tasks, function (item, callback) {
	logger.debug(item + " ==> " + sqls[item]);
    conn.query(sqls[item], function (err, res) {
    	logger.debug(res.toString());
        callback(err, res);
    });
}, function (err) {
	
	conn.end();
});
*/







